datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Material {
  id               String            @id @default(uuid())
  nome             String
  descricao        String?
  categoria        String?
  fotoUrl          String?
  criadoEm         DateTime          @default(now())
  atualizadoEm     DateTime          @updatedAt

  // Relação com ConferenciaItem
  conferenciaItems ConferenciaItem[]

  // Relação com Inventário
  inventarios LocalMaterial[]
}

model Local {
  id            String       @id @default(uuid())
  nome          String
  tipo          String
  descricao     String?
  criadoEm      DateTime     @default(now())
  atualizadoEm  DateTime     @updatedAt

  // Relação com Conferencias
  conferencias  Conferencia[]

  // Relação com Inventário
  inventarios LocalMaterial[]
}

model LocalMaterial {
  id              String    @id @default(uuid())
  localId         String
  local           Local     @relation(fields: [localId], references: [id], onDelete: Cascade)
  materialId      String
  material        Material  @relation(fields: [materialId], references: [id], onDelete: Cascade)
  quantidadeMinima Int

  @@unique([localId, materialId])  // Chave composta para evitar duplicatas
}


model Conferencia {
  id              String           @id @default(uuid())
  localId         String
  local           Local            @relation(fields: [localId], references: [id])
  dataConferencia DateTime
  responsavel     String
  observacoes     String?
  criadoEm        DateTime         @default(now())
  atualizadoEm    DateTime         @updatedAt

  // Relação com ConferenciaItem
  itens           ConferenciaItem[]
}

model ConferenciaItem {
  id            String       @id @default(uuid())
  conferenciaId String
  conferencia   Conferencia  @relation(fields: [conferenciaId], references: [id])
  materialId    String
  material      Material     @relation(fields: [materialId], references: [id])
  quantidade    Int
  status        String?
  observacao    String?
}
